{"ast":null,"code":"var _jsxFileName = \"/Users/janliz/Desktop/employee-directory-react/edreact/src/components/PersonList.js\";\nimport React from \"react\";\nimport API from \"../utils/API\"; // using the API\n\nimport { Table } from 'reactstrap';\nimport '../utils/style.css';\nimport Search from \"./Search\"; //Class -  setting state (data that I want to render)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PersonList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      //setting as an array. It's how we'll receive the data \n      search: \"\"\n    };\n\n    this.api = () => {\n      API.ramdomEmployees().then(res => {\n        this.setState({\n          users: res.data.results\n        }); // using setState to change USERS at the state level\n        // setting second API respond to display only search box input\n\n        this.setState({\n          search: res.data.results\n        });\n        console.log(res);\n      });\n    };\n\n    this.searchForm = query => {\n      return this.state.search.filter(user => user.name.first.includes(query) || user.name.last.includes(query));\n    };\n\n    this.handleInputChange = e => {\n      const value = e.target.value;\n      const name = e.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      this.render();\n    };\n  }\n\n  componentDidMount() {\n    this.api(); // this is calling axios.get from API.js and wil get data as soon componentDiMount loads. And runs one time\n  } //Using API to get data \n\n\n  //Rendering data\n  //this = reference to state\n  render() {\n    const users = this.state.users;\n    console.log('user', this.state.users); //accessing array of data and displaying each employeey information\n\n    const usersMap = users.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.picture.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: `${user.name.first} ${user.name.last}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.gender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          value: this.state.search,\n          handleInputChange: this.handleInputChange,\n          handleFormSubmit: this.handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"id\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"picture\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"gender\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: usersMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/janliz/Desktop/employee-directory-react/edreact/src/components/PersonList.js"],"names":["React","API","Table","Search","PersonList","Component","state","users","search","api","ramdomEmployees","then","res","setState","data","results","console","log","searchForm","query","filter","user","name","first","includes","last","handleInputChange","e","value","target","handleFormSubmit","preventDefault","render","componentDidMount","usersMap","map","index","picture","thumbnail","gender","email"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport API from \"../utils/API\"; // using the API\nimport { Table } from 'reactstrap';\nimport '../utils/style.css';\nimport Search from \"./Search\";\n\n\n\n\n//Class -  setting state (data that I want to render)\nexport default class PersonList extends React.Component {\n    state = {\n        users: [], //setting as an array. It's how we'll receive the data \n       search: \"\"\n    };\n\n    componentDidMount() {\n        this.api() // this is calling axios.get from API.js and wil get data as soon componentDiMount loads. And runs one time\n    }\n\n    //Using API to get data \n    api = () => {\n        API.ramdomEmployees().then(res => {\n            this.setState({ users: res.data.results });// using setState to change USERS at the state level\n\n            // setting second API respond to display only search box input\n            this.setState({ search: res.data.results });\n            console.log(res);\n        })\n\n    }\n\n    //search form \n    searchForm = query => {\n        return this.state.search.filter(user =>user.name.first.includes(query) || user.name.last.includes(query))\n    };\n\n    handleInputChange = e => {\n        const value = e.target.value;\n        const name = e.target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = e => {\n        e.preventDefault();\n        this.render();\n    }\n\n    //Rendering data\n    //this = reference to state\n    render() {\n\n        const users = this.state.users;\n        console.log('user', this.state.users)\n\n\n        //accessing array of data and displaying each employeey information\n\n        const usersMap = users.map((user, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>\n                        <img src={user.picture.thumbnail} />\n                    </td>\n                    <td>{`${user.name.first} ${user.name.last}`}</td>\n                    <td>{user.gender}</td>\n                    <td>{user.email}</td>\n                </tr>\n            )\n        })\n\n\n        return (\n            <div>\n                <div>\n                    <Search\n                        value={this.state.search}\n                        handleInputChange={this.handleInputChange}\n                        handleFormSubmit={this.handleFormSubmit}\n                    />\n                    </div>\n\n                <Table striped>\n                    <thead>\n                        <tr>\n                            <th value=\"id\">ID</th>\n                            <th value=\"picture\">Picture</th>\n                            <th value=\"name\">Name</th>\n                            <th value=\"gender\">Gender</th>\n                            <th value=\"email\">Email</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {usersMap}\n                    </tbody>\n                </Table>\n            </div>\n\n        );\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}