{"ast":null,"code":"var _jsxFileName = \"/Users/janliz/Desktop/employee-directory-react/edreact/src/components/PersonList.js\";\nimport React from \"react\";\nimport API from \"../utils/API\"; // using the API\n\nimport { Table } from 'reactstrap';\nimport '../utils/style.css'; //Class -  setting state (data that I want to render)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PersonList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [] //setting as an array. It's how we'll receive the data\n      // use this to display only users per name enter in the search box \n\n    };\n\n    this.api = () => {\n      API.ramdomEmployees().then(res => {\n        this.setState({\n          users: res.data.results\n        }); // using setState to change USERS at the state level\n        // setting second API respond to display only search box input\n\n        this.setState({\n          usersToDisplay: res.data.results\n        });\n        console.log(res);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.api(); // this is calling axios.get from API.js and wil get data as soon componentDiMount loads. And runs one time\n  } //Using API to get data \n\n\n  //Rendering data\n  //this = reference to state\n  render() {\n    const users = this.state.users;\n    console.log('user', this.state.users); //accessing array of data and displaying each employeey information\n\n    const usersMap = users.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.picture.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: `${user.name.first} ${user.name.last}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.gender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"id\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"picture\",\n              children: \"Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"gender\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              value: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: usersMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/janliz/Desktop/employee-directory-react/edreact/src/components/PersonList.js"],"names":["React","API","Table","PersonList","Component","state","users","api","ramdomEmployees","then","res","setState","data","results","usersToDisplay","console","log","componentDidMount","render","usersMap","map","user","index","picture","thumbnail","name","first","last","gender","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAAgC;;AAChC,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,oBAAP,C,CAKA;;;AACA,eAAe,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACpDC,KADoD,GAC5C;AACJC,MAAAA,KAAK,EAAE,EADH,CACO;AAEX;;AAHI,KAD4C;;AAAA,SAapDC,GAboD,GAa9C,MAAM;AACRN,MAAAA,GAAG,CAACO,eAAJ,GAAsBC,IAAtB,CAA2BC,GAAG,IAAI;AAC9B,aAAKC,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEI,GAAG,CAACE,IAAJ,CAASC;AAAlB,SAAd,EAD8B,CACa;AAE3C;;AACA,aAAKF,QAAL,CAAc;AAAEG,UAAAA,cAAc,EAAEJ,GAAG,CAACE,IAAJ,CAASC;AAA3B,SAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH,OAND;AAQH,KAtBmD;AAAA;;AAQpDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,GAAL,GADgB,CACL;AACd,GAVmD,CAYpD;;;AAYA;AACA;AACAW,EAAAA,MAAM,GAAG;AAEL,UAAMZ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKX,KAAL,CAAWC,KAA/B,EAHK,CAML;;AAEA,UAAMa,QAAQ,GAAGb,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxC,0BACI;AAAA,gCACI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA,oBAAiBA,KAAK,GAAG;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI;AAAK,YAAA,GAAG,EAAED,IAAI,CAACE,OAAL,CAAaC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAA,oBAAM,GAAEH,IAAI,CAACI,IAAL,CAAUC,KAAM,IAAGL,IAAI,CAACI,IAAL,CAAUE,IAAK;AAA1C;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,oBAAKN,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,oBAAKP,IAAI,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,SAASP,KAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KAZgB,CAAjB;AAeA,wBACI;AAAA,6BAEA,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,KAAK,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAI,cAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAI,cAAA,KAAK,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA,oBACKH;AADL;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AAtEmD","sourcesContent":["import React from \"react\";\nimport API from \"../utils/API\"; // using the API\nimport { Table } from 'reactstrap';\nimport '../utils/style.css';\n\n\n\n\n//Class -  setting state (data that I want to render)\nexport default class PersonList extends React.Component {\n    state = {\n        users: [], //setting as an array. It's how we'll receive the data\n\n        // use this to display only users per name enter in the search box \n\n    };\n\n    componentDidMount() {\n        this.api() // this is calling axios.get from API.js and wil get data as soon componentDiMount loads. And runs one time\n    }\n\n    //Using API to get data \n    api = () => {\n        API.ramdomEmployees().then(res => {\n            this.setState({ users: res.data.results });// using setState to change USERS at the state level\n\n            // setting second API respond to display only search box input\n            this.setState({ usersToDisplay: res.data.results });\n            console.log(res);\n        })\n\n    }\n\n    //Rendering data\n    //this = reference to state\n    render() {\n\n        const users = this.state.users;\n        console.log('user', this.state.users)\n\n    \n        //accessing array of data and displaying each employeey information\n\n        const usersMap = users.map((user, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>\n                        <img src={user.picture.thumbnail} />\n                    </td>\n                    <td>{`${user.name.first} ${user.name.last}`}</td>\n                    <td>{user.gender}</td>\n                    <td>{user.email}</td>\n                </tr>\n            )\n        })\n\n \n        return (\n            <div>\n           \n            <Table striped>\n                <thead>\n                    <tr>\n                        <th value=\"id\">ID</th>\n                        <th value=\"picture\">Picture</th>\n                        <th value=\"name\">Name</th>\n                        <th value=\"gender\">Gender</th>\n                        <th value=\"email\">Email</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {usersMap}\n                </tbody>\n            </Table>\n            </div>\n\n        );\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}