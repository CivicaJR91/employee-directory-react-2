{"ast":null,"code":"import _defineProperty from\"/Users/janliz/Desktop/employee-directory-react/employee-directory-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/janliz/Desktop/employee-directory-react/employee-directory-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/janliz/Desktop/employee-directory-react/employee-directory-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/janliz/Desktop/employee-directory-react/employee-directory-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/janliz/Desktop/employee-directory-react/employee-directory-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import API from\"../utils/API\";// using the API\nimport{Table}from'reactstrap';import'../utils/style.css';import Search from\"./Search\";//Class -  setting state (data that I want to render)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PersonList=/*#__PURE__*/function(_React$Component){_inherits(PersonList,_React$Component);var _super=_createSuper(PersonList);function PersonList(){var _this;_classCallCheck(this,PersonList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={users:[],//setting as an array. It's how we'll receive the data \nsearched:[]};_this.api=function(){API.ramdomEmployees().then(function(res){_this.setState({users:res.data.results});console.log(res);// using setState to change USERS at the state level\n// setting second API respond to display only search box input\n_this.setState({searched:res.data.results});});};_this.searchForm=function(query){return _this.state.searched.filter(function(user){return user.name.first.includes(query)||user.name.last.includes(query);});};_this.handleInputChange=function(e){var value=e.target.value;var name=e.target.name;_this.setState(_defineProperty({},name,value));};_this.handleFormSubmit=function(e){e.preventDefault();_this.render();};return _this;}_createClass(PersonList,[{key:\"componentDidMount\",value:function componentDidMount(){this.api();// this is calling axios.get from API.js and wil get data as soon componentDiMount loads. And runs one time\n}//Using API to get data \n},{key:\"render\",value://Rendering data\n//this = reference to state\nfunction render(){var users=this.state.users;console.log('user',this.state.users);//accessing array of data and displaying each employeey information\nvar usersMap=users.map(function(user,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"row\",children:index+1}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"img\",{src:user.picture.thumbnail})}),/*#__PURE__*/_jsx(\"td\",{children:\"\".concat(user.name.first,\" \").concat(user.name.last)}),/*#__PURE__*/_jsx(\"td\",{children:user.gender}),/*#__PURE__*/_jsx(\"td\",{children:user.email})]},index);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Search,{value:this.state.searched,handleInputChange:this.handleInputChange,handleFormSubmit:this.handleFormSubmit})}),/*#__PURE__*/_jsxs(Table,{striped:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{value:\"id\",children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{value:\"picture\",children:\"Picture\"}),/*#__PURE__*/_jsx(\"th\",{value:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{value:\"gender\",children:\"Gender\"}),/*#__PURE__*/_jsx(\"th\",{value:\"email\",children:\"Email\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:usersMap})]})]});}}]);return PersonList;}(React.Component);export{PersonList as default};","map":{"version":3,"sources":["/Users/janliz/Desktop/employee-directory-react/employee-directory-react/src/components/PersonList.js"],"names":["React","API","Table","Search","PersonList","state","users","searched","api","ramdomEmployees","then","res","setState","data","results","console","log","searchForm","query","filter","user","name","first","includes","last","handleInputChange","e","value","target","handleFormSubmit","preventDefault","render","usersMap","map","index","picture","thumbnail","gender","email","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport API from \"../utils/API\"; // using the API\nimport { Table } from 'reactstrap';\nimport '../utils/style.css';\nimport Search from \"./Search\";\n\n\n\n\n//Class -  setting state (data that I want to render)\nexport default class PersonList extends React.Component {\n    state = {\n        users: [], //setting as an array. It's how we'll receive the data \n       searched: []\n    };\n\n    componentDidMount() {\n        this.api() // this is calling axios.get from API.js and wil get data as soon componentDiMount loads. And runs one time\n    }\n\n    //Using API to get data \n    api = () => {\n        API.ramdomEmployees().then(res => {\n            this.setState({ users: res.data.results });\n            console.log(res);// using setState to change USERS at the state level\n\n            // setting second API respond to display only search box input\n            this.setState({ searched: res.data.results });\n          \n        })\n\n    }\n\n    //search form \n    searchForm = query => {\n        return this.state.searched.filter(user => user.name.first.includes(query) || user.name.last.includes(query))\n    };\n\n    handleInputChange = e => {\n        const value = e.target.value;\n        const name = e.target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = e => {\n        e.preventDefault();\n        this.render();\n    }\n\n    //Rendering data\n    //this = reference to state\n    render() {\n\n        const users = this.state.users;\n        console.log('user', this.state.users)\n\n\n        //accessing array of data and displaying each employeey information\n\n        const usersMap = users.map((user, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>\n                        <img src={user.picture.thumbnail} />\n                    </td>\n                    <td>{`${user.name.first} ${user.name.last}`}</td>\n                    <td>{user.gender}</td>\n                    <td>{user.email}</td>\n                </tr>\n            )\n        })\n\n\n        return (\n            <div>\n                <div>\n                    <Search\n                        value = {this.state.searched}\n                        handleInputChange={this.handleInputChange}\n                        handleFormSubmit={this.handleFormSubmit}\n                    />\n                    </div>\n\n                <Table striped>\n                    <thead>\n                        <tr>\n                            <th value=\"id\">ID</th>\n                            <th value=\"picture\">Picture</th>\n                            <th value=\"name\">Name</th>\n                            <th value=\"gender\">Gender</th>\n                            <th value=\"email\">Email</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {usersMap}\n                    </tbody>\n                </Table>\n            </div>\n\n        );\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}