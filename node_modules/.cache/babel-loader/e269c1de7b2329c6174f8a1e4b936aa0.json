{"ast":null,"code":"var _jsxFileName = \"/Users/janliz/Desktop/employee-directory-react/edreact/src/components/PersonList.js\";\nimport React from \"react\";\nimport API from \"../utils/API\"; // using the API\n\nimport { Table } from 'reactstrap';\nimport '../utils/style.css'; //Class -  setting state (data that I want to render)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PersonList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      //setting as an array. It's how we'll receive the data\n      // use this to display only users per name enter in the search box\n      usersToDisplay: [],\n      sort: \"asc\"\n    };\n\n    this.api = () => {\n      API.ramdomEmployees().then(res => {\n        this.setState({\n          users: res.data.results\n        }); // using setState to change USERS at the state level\n        // setting second API respond to display only search box input\n\n        this.setState({\n          usersToDisplay: res.data.results\n        });\n        console.log(res);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.api(); // this is calling axios.get from API.js and wil get data as soon componentDiMount loads. And runs one time\n  } //Using API to get data \n\n\n  //Filter by name when a name is enter. \n  // employeeFilterOnChange = (event) => {\n  //     console.log(\"input\", event.target);\n  //     // use .filter on the users state\n  //     // get only the employees that match the value the user has typed in\n  //     // set usersToDisplay state\n  //   };\n  //Rendering data\n  //this = reference to state\n  render() {\n    const users = this.state.users;\n    console.log('user', this.state.users);\n    const sorted = users.sort(); //accessing array of data and displaying each employeey information\n    // const usersMap = users.map((user, index) => {\n    //     return (\n    //         <tr key={index}>\n    //             <th scope=\"row\">{index + 1}</th>\n    //             <td>\n    //                 <img src={user.picture.thumbnail} />\n    //             </td>\n    //             <td>{`${user.name.first} ${user.name.last}`}</td>\n    //             <td>{user.gender}</td>\n    //             <td>{user.email}</td>\n    //         </tr>\n    //     )\n    // })\n\n    const usersMap = users.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search\",\n            children: \" Search by Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.usersToDisplay,\n            onChange: this.employeeFilterOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                value: \"id\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                value: \"picture\",\n                children: \"Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                value: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                value: \"gender\",\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                value: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: user.picture.thumbnail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: `${user.name.first} ${user.name.last}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/janliz/Desktop/employee-directory-react/edreact/src/components/PersonList.js"],"names":["React","API","Table","PersonList","Component","state","users","usersToDisplay","sort","api","ramdomEmployees","then","res","setState","data","results","console","log","componentDidMount","render","sorted","usersMap","map","user","index","employeeFilterOnChange","picture","thumbnail","name","first","last","gender","email"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport API from \"../utils/API\"; // using the API\nimport { Table } from 'reactstrap';\nimport '../utils/style.css';\n\n\n//Class -  setting state (data that I want to render)\nexport default class PersonList extends React.Component {\n    state = {\n        users: [], //setting as an array. It's how we'll receive the data\n\n        // use this to display only users per name enter in the search box\n        usersToDisplay: [],\n\n        sort: \"asc\"\n\n    };\n\n    componentDidMount() {\n        this.api() // this is calling axios.get from API.js and wil get data as soon componentDiMount loads. And runs one time\n    }\n\n    //Using API to get data \n    api = () => {\n        API.ramdomEmployees().then(res => {\n            this.setState({ users: res.data.results });// using setState to change USERS at the state level\n\n            // setting second API respond to display only search box input\n            this.setState({ usersToDisplay: res.data.results });\n            console.log(res);\n        })\n\n    }\n\n    //Filter by name when a name is enter. \n    // employeeFilterOnChange = (event) => {\n    //     console.log(\"input\", event.target);\n    //     // use .filter on the users state\n    //     // get only the employees that match the value the user has typed in\n    //     // set usersToDisplay state\n    //   };\n\n    //Rendering data\n    //this = reference to state\n    render() {\n\n        const users = this.state.users;\n        console.log('user', this.state.users)\n\n        const sorted = users.sort()\n\n\n        //accessing array of data and displaying each employeey information\n\n        // const usersMap = users.map((user, index) => {\n        //     return (\n        //         <tr key={index}>\n        //             <th scope=\"row\">{index + 1}</th>\n        //             <td>\n        //                 <img src={user.picture.thumbnail} />\n        //             </td>\n        //             <td>{`${user.name.first} ${user.name.last}`}</td>\n        //             <td>{user.gender}</td>\n        //             <td>{user.email}</td>\n        //         </tr>\n        //     )\n        // })\n\n        const usersMap = users.map((user, index) => {\n            return (\n                <div>\n                    <div>\n                        <label htmlFor=\"search\"> Search by Name</label>\n                        <input type=\"text\" value={this.usersToDisplay} onChange={this.employeeFilterOnChange}></input>\n                        <button type=\"submit\">Search</button>\n                    </div>\n                    <Table striped>\n                        <thead>\n                            <tr>\n                                <th value=\"id\">ID</th>\n                                <th value=\"picture\">Picture</th>\n                                <th value=\"name\">Name</th>\n                                <th value=\"gender\">Gender</th>\n                                <th value=\"email\">Email</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            <tr key={index}>\n                                <th scope=\"row\">{index + 1}</th>\n                                <td>\n                                    <img src={user.picture.thumbnail} />\n                                </td>\n                                <td>{`${user.name.first} ${user.name.last}`}</td>\n                                <td>{user.gender}</td>\n                                <td>{user.email}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </div>\n\n            );\n\n        }\n\n        )}}\n"]},"metadata":{},"sourceType":"module"}